{"title":"vue-ssr","date":"2017-02-18T13:17:25.000Z","tags":["vue","ssr"],"last_date":"2017-02-19T18:17:25.000Z","filename":"vue-ssr","body":"<div class=\"toc\"><ul class=\"toc-tree\">\n<li class=\"toc-item toc-level-1\">\n<ul>\n<li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#前言\"><span class=\"toc-number\"></span><span class=\"toc-text\">前言</span></a>\n</li>\n<li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#一.ssr的技术选择\"><span class=\"toc-number\"></span><span class=\"toc-text\">一.ssr的技术选择</span></a>\n</li>\n<li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#二.初始化项目\"><span class=\"toc-number\"></span><span class=\"toc-text\">二.初始化项目</span></a>\n</li>\n<li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#三.项目结构\"><span class=\"toc-number\"></span><span class=\"toc-text\">三.项目结构</span></a>\n</li>\n<li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#四.部分代码分析\"><span class=\"toc-number\"></span><span class=\"toc-text\">四.部分代码分析</span></a>\n<ul>\n<li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1. server.js(就说点重点代码)\"><span class=\"toc-number\"></span><span class=\"toc-text\">1. server.js(就说点重点代码)</span></a>\n</li>\n<li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2. build/setup-dev-server.js\"><span class=\"toc-number\"></span><span class=\"toc-text\">2. build/setup-dev-server.js</span></a>\n</li>\n<li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3. build/webpack.base.config.js\"><span class=\"toc-number\"></span><span class=\"toc-text\">3. build/webpack.base.config.js</span></a>\n</li>\n<li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4. build/webpack.client.config.js\"><span class=\"toc-number\"></span><span class=\"toc-text\">4. build/webpack.client.config.js</span></a>\n</li>\n<li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5. bulid/webpack.client.config.js\"><span class=\"toc-number\"></span><span class=\"toc-text\">5. bulid/webpack.client.config.js</span></a>\n</li>\n<li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6. src/client-entry.js\"><span class=\"toc-number\"></span><span class=\"toc-text\">6. src/client-entry.js</span></a>\n</li>\n<li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7. src/server-entry.js\"><span class=\"toc-number\"></span><span class=\"toc-text\">7. src/server-entry.js</span></a>\n</li>\n<li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8. src/app.js\"><span class=\"toc-number\"></span><span class=\"toc-text\">8. src/app.js</span></a>\n</li>\n<li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9. src/store/index.js\"><span class=\"toc-number\"></span><span class=\"toc-text\">9. src/store/index.js</span></a>\n</li>\n<li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10. src/store/api.js\"><span class=\"toc-number\"></span><span class=\"toc-text\">10. src/store/api.js</span></a>\n</li>\n<li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#11. src/views/createlistview.js\"><span class=\"toc-number\"></span><span class=\"toc-text\">11. src/views/CreateListView.js</span></a>\n</li>\n<li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#12. src/components/itemlist.vue\"><span class=\"toc-number\"></span><span class=\"toc-text\">12. src/components/ItemList.vue</span></a>\n</li></ul>\n<li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#五.文字流程说明\"><span class=\"toc-number\"></span><span class=\"toc-text\">五.文字流程说明</span></a>\n</li>\n<li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#六.源码\"><span class=\"toc-number\"></span><span class=\"toc-text\">六.源码</span></a>\n</li></ul>\n</li></ul></div><h2><a class=\"anchor\" name=\"前言\" href=\"#前言\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2><p>自从前端技术栈换到 <code>mvvm</code> 之类的以后网站的源码查看就只会有一些js了，对于用户是没什么问题但是却对 <code>seo</code> 有很大的问题。</p>\n<p>因为百度之类的爬虫不会执行js来渲染所以无法得到内容。大部分主流的<code>mvvm</code>框架都有了 <code>ssr(Server Side Rendering)</code> 意为服务端渲染。\n<del>不是手游的ssr，好像暴露了什么</del></p>\n<h2><a class=\"anchor\" name=\"一.ssr的技术选择\" href=\"#一.ssr的技术选择\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>一.ssr的技术选择</h2><ul class=\"contains-list\">\n<li class=\"list-item\"><p><a href=\"https://github.com/vuejs/vue/tree/dev/packages/vue-server-renderer\">vue-server-renderer</a></p>\n<blockquote>\n<p>vue官方的服务端渲染包</p>\n</blockquote>\n</li>\n<li class=\"list-item\"><p><a href=\"https://github.com/nuxt/nuxt.js\">nuxt</a></p>\n<blockquote>\n<p>使用官方 <code>vue-server-renderer</code> 包装后的脚手架工具，极大的简化了 <code>ssr</code> 的搭建；\nundefined</p>\n<p>但是不仅仅保含 <code>ssr</code> 包括了现有的大部分的 <code>vue</code> 栈，快速简化了 <code>vue</code> 栈项目的搭建；\nundefined</p>\n<p>如果不是有特殊需求，直接使用 <code>nuxt</code> ，以便节省时间特别是不会英文的童鞋 <code>nuxt</code> 官方文档还带支持中文。</p>\n</blockquote>\n<h2><a class=\"anchor\" name=\"二.初始化项目\" href=\"#二.初始化项目\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>二.初始化项目</h2><pre class=\"code shell\"><code class=\"shell\">yarn init\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> node项目初始化</span>\nyarn add axios compression cross-env es6-promise \\\nexpress lru-cache serialize-javascript vue vue-router \\\nvuex vuex-router-sync\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 安装运行时包根据顺序解释</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 1.axios - http 请求工具</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 2.compression - express 的 gzip 中间组件</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 3.cross-env - 跨平台环境变量设置工具</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 4.es6-promise - ie9 的 promise 支持</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 5.express - node web 框架</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 6.lru-cache - js 的 lru 缓存</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 7.serialize-javascript - js 对象序列化为 js 代码</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 8.vue - 这个不用说了吧</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 9.vue-router - vue 的前端路由通过 ssr 后有后端路由效果</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 10.vuex - vue 的状态管理工具 ssr 中前后端同步</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 11.vuex-router-sync - 路由同步工具</span>\n\nyarn add autoprefixer buble buble-loader css-loader \\\nurl-loader html-webpack-plugin rimraf stylus \\\nstylus-loader sw-precache-webpack-plugin vue-loader \\\nvue-template-compiler webpack webpack-dev-middleware \\\nwebpack-hot-middleware extract-text-webpack-plugin@2.0.0-rc3 --dev\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 开发&amp;&amp;打包时包</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 1.autiprefixer - css 前缀自动生成</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 2.buble - babel 的类似工具以后更换看看会不会有什么影响</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 3.buble-loader - 同上</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 4.css-loader - css 加载器</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 5.url-loader - file-loader 的包装，图片可以以base64导入</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 6.html-webpack-plugin - html 的资源加载生成</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 7.rimraf - 跨平台的删除工具</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 8.stylus - stylus 加载器类似 sass 但是个人不喜欢用 sass 所以用 stylus</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 9.stylus-loader - 同上</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 10.sw-precache-webpack - service-worker 支持</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 11.vue-loader - vue 文件加载器</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 12.vue-template-compiler - template to render</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 13.webpack - 模块打包工具</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 14.webpack-dev-middleware - 监听文件改动</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 15.webpack-hot-middleware - 热更新</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 16.extract-text-webpack-plugin - 独立生成css</span>\n</code></pre>\n<h2><a class=\"anchor\" name=\"三.项目结构\" href=\"#三.项目结构\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>三.项目结构</h2><pre class=\"code yaml\"><code class=\"yaml\"><span class=\"hljs-string\">│</span>  <span class=\"hljs-string\">package.json</span>\n<span class=\"hljs-string\">│</span>  <span class=\"hljs-string\">server.js</span>                <span class=\"hljs-comment\"># server-render</span>\n<span class=\"hljs-string\">│</span>  <span class=\"hljs-string\">yarn.lock</span>\n<span class=\"hljs-string\">│</span>\n<span class=\"hljs-string\">├─build</span>\n<span class=\"hljs-string\">│</span>      <span class=\"hljs-string\">setup-dev-server.js</span>      <span class=\"hljs-comment\"># dev 的热生成</span>\n<span class=\"hljs-string\">│</span>      <span class=\"hljs-string\">vue-loader.config.js</span>     <span class=\"hljs-comment\"># 独立出 vue-loader 配置以便根据环境改变</span>\n<span class=\"hljs-string\">│</span>      <span class=\"hljs-string\">webpack.base.config.js</span>   <span class=\"hljs-comment\"># 基础 webpack 配置</span>\n<span class=\"hljs-string\">│</span>      <span class=\"hljs-string\">webpack.client.config.js</span> <span class=\"hljs-comment\"># 打包 client 的配置</span>\n<span class=\"hljs-string\">│</span>      <span class=\"hljs-string\">webpack.server.config.js</span> <span class=\"hljs-comment\"># 打包 server 的配置</span>\n<span class=\"hljs-string\">│</span>\n<span class=\"hljs-string\">├─public</span>                        <span class=\"hljs-comment\"># 一些静态资源</span>\n<span class=\"hljs-string\">└─src</span>\n  <span class=\"hljs-string\">│</span>  <span class=\"hljs-string\">app.js</span>                   <span class=\"hljs-comment\"># 整合 router,filters,vuex 的入口文件</span>\n  <span class=\"hljs-string\">│</span>  <span class=\"hljs-string\">App.vue</span>                  <span class=\"hljs-comment\"># 顶级 vue 组件</span>\n  <span class=\"hljs-string\">│</span>  <span class=\"hljs-string\">client-entry.js</span>          <span class=\"hljs-comment\"># client 的入口文件</span>\n  <span class=\"hljs-string\">│</span>  <span class=\"hljs-string\">index.template.html</span>      <span class=\"hljs-comment\"># html 模板</span>\n  <span class=\"hljs-string\">│</span>  <span class=\"hljs-string\">server-entry.js</span>          <span class=\"hljs-comment\"># server 的入口文件</span>\n  <span class=\"hljs-string\">│</span>\n  <span class=\"hljs-string\">├─components</span>\n  <span class=\"hljs-string\">│</span>      <span class=\"hljs-string\">Item.vue</span>             <span class=\"hljs-comment\"># 抽取出List中的每个项</span>\n  <span class=\"hljs-string\">│</span>      <span class=\"hljs-string\">ItemList.vue</span>         <span class=\"hljs-comment\"># List 的 vue 组件</span>\n  <span class=\"hljs-string\">│</span>      <span class=\"hljs-string\">Spinner.vue</span>          <span class=\"hljs-comment\"># 加载提示</span>\n  <span class=\"hljs-string\">│</span>\n  <span class=\"hljs-string\">├─filters</span>\n  <span class=\"hljs-string\">│</span>      <span class=\"hljs-string\">index.js</span>             <span class=\"hljs-comment\"># filters</span>\n  <span class=\"hljs-string\">│</span>\n  <span class=\"hljs-string\">├─router</span>\n  <span class=\"hljs-string\">│</span>      <span class=\"hljs-string\">index.js</span>             <span class=\"hljs-comment\"># router config</span>\n  <span class=\"hljs-string\">│</span>\n  <span class=\"hljs-string\">├─store</span>\n  <span class=\"hljs-string\">│</span>      <span class=\"hljs-string\">api.js</span>               <span class=\"hljs-comment\"># 数据请求方式</span>\n  <span class=\"hljs-string\">│</span>      <span class=\"hljs-string\">create-api-client.js</span> <span class=\"hljs-comment\"># client 数据请求对象的设置</span>\n  <span class=\"hljs-string\">│</span>      <span class=\"hljs-string\">create-api-server.js</span> <span class=\"hljs-comment\"># server 数据请求对象的设置</span>\n  <span class=\"hljs-string\">│</span>      <span class=\"hljs-string\">index.js</span>             <span class=\"hljs-comment\"># vuex 的各种配置</span>\n  <span class=\"hljs-string\">│</span>\n  <span class=\"hljs-string\">└─views</span>\n          <span class=\"hljs-string\">CreateListView.js</span>   <span class=\"hljs-comment\"># 包装 component 支持 preFetch</span>\n</code></pre>\n<h2><a class=\"anchor\" name=\"四.部分代码分析\" href=\"#四.部分代码分析\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>四.部分代码分析</h2><blockquote>\n<p>我将根据依赖关系来一个个说明,npm包不说明</p>\n</blockquote>\n<h3><a class=\"anchor\" name=\"1. server.js(就说点重点代码)\" href=\"#1. server.js(就说点重点代码)\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. server.js(就说点重点代码)</h3><blockquote>\n<p>require: [&#39;build/setup-dev-server.js&#39;]</p>\n<pre class=\"code javascript\"><code class=\"javascript\"><span class=\"hljs-comment\">// [L16-L48]</span>\n<span class=\"hljs-keyword\">let</span> indexHTML\n<span class=\"hljs-keyword\">let</span> renderer\n<span class=\"hljs-keyword\">if</span> (isProd) {\n  <span class=\"hljs-comment\">// 生产环境直接读取build生成的文件</span>\n  renderer = createRenderer(fs.readFileSync(resolve(<span class=\"hljs-string\">'./dist/server-bundle.js'</span>), <span class=\"hljs-string\">'utf-8'</span>))\n  indexHTML = parseIndex(fs.readFileSync(resolve(<span class=\"hljs-string\">'./dist/index.html'</span>), <span class=\"hljs-string\">'utf-8'</span>))\n} <span class=\"hljs-keyword\">else</span> {\n  <span class=\"hljs-comment\">// 开发环境下使用dev-server来通过回调把生成在内存中的文件赋值</span>\n  <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'./build/setup-dev-server'</span>)(app, {\n      <span class=\"hljs-attr\">bundleUpdated</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">bundle</span> =&gt;</span> {\n          renderer = createRenderer(bundle)\n      },\n      <span class=\"hljs-attr\">indexUpdated</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">index</span> =&gt;</span> {\n          indexHTML = parseIndex(index)\n      }\n  })\n}\n<span class=\"hljs-comment\">// 不论生产还是开发环境把server-bundle.js设置到vue-server-renderer获得Renderer装换器对象</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">createRenderer</span> (<span class=\"hljs-params\">bundle</span>) </span>{\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'vue-server-renderer'</span>).createBundleRenderer(bundle, {\n      <span class=\"hljs-attr\">cache</span>: <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'lru-cache'</span>)({\n          <span class=\"hljs-attr\">max</span>: <span class=\"hljs-number\">1000</span>,\n          <span class=\"hljs-attr\">maxAge</span>: <span class=\"hljs-number\">1000</span> * <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">15</span>\n      })\n  })\n}\n<span class=\"hljs-comment\">// 通过目标预设的字符串分割出头部和尾部</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">parseIndex</span> (<span class=\"hljs-params\">template</span>) </span>{\n  <span class=\"hljs-keyword\">const</span> contentMarker = <span class=\"hljs-string\">'&lt;!-- APP --&gt;'</span>\n  <span class=\"hljs-keyword\">const</span> i = template.indexOf(contentMarker)\n  <span class=\"hljs-keyword\">return</span> {\n      <span class=\"hljs-attr\">head</span>: template.slice(<span class=\"hljs-number\">0</span>, i),\n      <span class=\"hljs-attr\">tail</span>: template.slice(i + contentMarker.length)\n  }\n}<span class=\"hljs-comment\">// [L60-L78]</span>\n<span class=\"hljs-comment\">// 模拟api </span>\napp.use(<span class=\"hljs-string\">'/api/topstories.json'</span>, serve(<span class=\"hljs-string\">'./public/api/topstories.json'</span>))\napp.use(<span class=\"hljs-string\">'/api/newstories.json'</span>, serve(<span class=\"hljs-string\">'./public/api/newstories.json'</span>))\n<span class=\"hljs-comment\">// 模拟了/api/item/xx.json的接口</span>\napp.get(<span class=\"hljs-string\">'/api/item/:id.json'</span>, (req, res, next) =&gt; {\n  <span class=\"hljs-keyword\">const</span> id = req.params.id\n  <span class=\"hljs-keyword\">const</span> time = <span class=\"hljs-built_in\">parseInt</span>(<span class=\"hljs-built_in\">Math</span>.random()*(<span class=\"hljs-number\">1487396700</span><span class=\"hljs-number\">-1400000000</span>+<span class=\"hljs-number\">1</span>)+<span class=\"hljs-number\">1400000000</span>)\n  <span class=\"hljs-keyword\">const</span> item = {\n      <span class=\"hljs-attr\">by</span>: <span class=\"hljs-string\">\"zero\"</span> + id,\n      <span class=\"hljs-attr\">descendants</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">id</span>: id,\n      <span class=\"hljs-attr\">score</span>: id - <span class=\"hljs-number\">13664000</span>,\n      <span class=\"hljs-attr\">time</span>: time,\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">`测试Item:<span class=\"hljs-subst\">${id}</span> - <span class=\"hljs-subst\">${time}</span>`</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">'story'</span>,\n      <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">`/api/item/<span class=\"hljs-subst\">${id}</span>.json`</span>\n  }res.json(item)\n})\n<span class=\"hljs-comment\">// [L81-L116]</span>\napp.get(<span class=\"hljs-string\">'*'</span>, (req, res) =&gt; {\n  <span class=\"hljs-comment\">// 防止异步的renderer对象还未生成</span>\n  <span class=\"hljs-keyword\">if</span> (!renderer) {\n      <span class=\"hljs-keyword\">return</span> res.end(<span class=\"hljs-string\">'waiting for compilation.. refresh in a moment.'</span>)\n  }\n  <span class=\"hljs-comment\">// set header</span>\n  res.setHeader(<span class=\"hljs-string\">\"Context-Type\"</span>, <span class=\"hljs-string\">\"text/html\"</span>)\n  res.setHeader(<span class=\"hljs-string\">\"Server\"</span>, serverInfo)\n  <span class=\"hljs-comment\">// 记录时间</span>\n  <span class=\"hljs-keyword\">const</span> s = <span class=\"hljs-built_in\">Date</span>.now()\n  <span class=\"hljs-keyword\">const</span> context = { <span class=\"hljs-attr\">url</span>: req.url }\n  <span class=\"hljs-comment\">// 为renderToStream方法传入url，renderToStream会根据url寻找vue-router</span>\n  <span class=\"hljs-keyword\">const</span> renderStream = renderer.renderToStream(context)\n  <span class=\"hljs-comment\">// 注册data之前事件把index.html的头部写入res</span>\n  renderStream.once(<span class=\"hljs-string\">'data'</span>, () =&gt; {\n      res.write(indexHTML.head)\n  })\n  <span class=\"hljs-comment\">// 注册data中事件直接把ssr的html写出</span>\n  renderStream.on(<span class=\"hljs-string\">'data'</span>, chunk =&gt; {\n      res.write(chunk)\n  })\n  <span class=\"hljs-comment\">// 注册end事件把已经挂载到context的vuex的State，</span>\n  <span class=\"hljs-comment\">// 通过`serialize-javascript`序列化成js字面量。</span>\n  <span class=\"hljs-comment\">// 其中挂载到window.__INSTAL_STATE__</span>\n  <span class=\"hljs-comment\">// 并且返回index.html尾部并结束这个请求</span>\n  <span class=\"hljs-comment\">// 最后输出这次ssr的时间</span>\n  renderStream.on(<span class=\"hljs-string\">'end'</span>, () =&gt; {\n      <span class=\"hljs-keyword\">if</span> (context.initialState) {\n          res.write(\n              <span class=\"hljs-string\">`&lt;script&gt;window.__INSTAL_STATE__=<span class=\"hljs-subst\">${\n                  serialize(context.initialState)\n              }</span>&lt;/script&gt;`</span>\n          )\n      }\n      res.end(indexHTML.tail)\n      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`whole request: <span class=\"hljs-subst\">${<span class=\"hljs-built_in\">Date</span>.now() - s}</span>ms`</span>)\n  })\n  <span class=\"hljs-comment\">// 错误事件</span>\n  renderStream.on(<span class=\"hljs-string\">'error'</span>, err =&gt; {\n      <span class=\"hljs-keyword\">if</span> (err &amp;&amp; err.code === <span class=\"hljs-string\">'404'</span>) {\n          res.status(<span class=\"hljs-number\">404</span>).end(<span class=\"hljs-string\">'404 | Page Not Found'</span>)\n          <span class=\"hljs-keyword\">return</span>\n      }\n      res.status(<span class=\"hljs-number\">500</span>).end(<span class=\"hljs-string\">'Internal Error 500'</span>)\n      <span class=\"hljs-built_in\">console</span>.error(<span class=\"hljs-string\">`error during render : <span class=\"hljs-subst\">${req.url}</span>`</span>)\n      <span class=\"hljs-built_in\">console</span>.error(err)\n  })\n})\n</code></pre>\n<h3><a class=\"anchor\" name=\"2. build/setup-dev-server.js\" href=\"#2. build/setup-dev-server.js\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. build/setup-dev-server.js</h3><p>require: [&#39;build/webpack.client.config.js&#39;,&#39;build/webpack.server.config.js&#39;]</p>\n<pre class=\"code javascript\"><code class=\"javascript\"><span class=\"hljs-comment\">// [L24-L37]</span>\n  <span class=\"hljs-comment\">// 在client-webpack转换完成时获取devMiddleware的fileSystem。</span>\n  <span class=\"hljs-comment\">// 读取生成的index.html并通过传入的opt的回调设置到server.js里</span>\n  clientCompiler.plugin(<span class=\"hljs-string\">'done'</span>, () =&gt; {\n      <span class=\"hljs-keyword\">const</span> fs = devMiddleware.fileSystem\n      <span class=\"hljs-keyword\">const</span> filePath = path.join(clientConfig.output.path, <span class=\"hljs-string\">'index.html'</span>)\n      fs.stat(filePath, (err, stats) =&gt; {\n          <span class=\"hljs-keyword\">if</span> (stats &amp;&amp; stats.isFile()){\n              fs.readFile(filePath, <span class=\"hljs-string\">'utf-8'</span>, (err, data) =&gt; {\n                  opts.indexUpdated(data)\n              })\n          } <span class=\"hljs-keyword\">else</span> {\n              <span class=\"hljs-built_in\">console</span>.error(err)\n          }\n      })\n  })\n<span class=\"hljs-comment\">// [L41-L52]</span>\n  <span class=\"hljs-comment\">// 通过memory-fs创建一个内存文件系统对象</span>\n  <span class=\"hljs-keyword\">const</span> mfs = <span class=\"hljs-keyword\">new</span> MFS()\n  <span class=\"hljs-keyword\">const</span> outputPath = path.join(serverConfig.output.path, serverConfig.output.filename)\n  <span class=\"hljs-comment\">// 把server-webpack生成的文件重定向到内存中</span>\n  serverCompiler.outputFileSystem = mfs\n  <span class=\"hljs-comment\">// 设置文件重新编译监听并通过opt的回调设置到server.js</span>\n  serverCompiler.watch({}, (err, stats) =&gt; {\n      <span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">throw</span> err\n      stats = stats.toJson()\n      stats.errors.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> <span class=\"hljs-built_in\">console</span>.error(err))\n      stats.warnings.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> <span class=\"hljs-built_in\">console</span>.warn(err))\n      mfs.readFile(outputPath, <span class=\"hljs-string\">'utf-8'</span>, (err, data) =&gt; {\n          opts.bundleUpdated(data)\n      })\n  })\n</code></pre>\n<h3><a class=\"anchor\" name=\"3. build/webpack.base.config.js\" href=\"#3. build/webpack.base.config.js\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. build/webpack.base.config.js</h3><p>require: [&#39;build/vue-loader.config.js&#39;] \nundefined</p>\n<p>因为其它webpack配置都依赖这个所以就先说这个\nundefined</p>\n<p>其中build/vue-loader.config.js并没有什么对ssr有关的内容就不说明了\nundefined</p>\n<p>然后这个配置文件就是很普通的webpack2配置文件满地都是就不说了代码\nundefined</p>\n<p>entry 默认是client, 对vue-loader做了css插件引入配置对ssr没什么用</p>\n</blockquote>\n<h3><a class=\"anchor\" name=\"4. build/webpack.client.config.js\" href=\"#4. build/webpack.client.config.js\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. build/webpack.client.config.js</h3><blockquote>\n<p>require: [&#39;build/vue-loader.config.js&#39;, &#39;build/webpack.base.config.js&#39;]</p>\n<p>webpack_require: [&#39;src/cilent-entry.js&#39;]\nundefined</p>\n<p>在resolve的alias设置好api为client的js导入\nundefined</p>\n<p>设置好环境变量\nundefined</p>\n<p>添加HtmlPlugin来生成index.html\nundefined</p>\n<p>剩下的也和ssr无关</p>\n</blockquote>\n<h3><a class=\"anchor\" name=\"5. bulid/webpack.client.config.js\" href=\"#5. bulid/webpack.client.config.js\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. bulid/webpack.client.config.js</h3><blockquote>\n<p>require: [&#39;build/webpack.base.config.js&#39;]</p>\n<p>webpack_require: [&#39;src/server-entry.js&#39;]</p>\n<pre class=\"code javascript\"><code class=\"javascript\"><span class=\"hljs-built_in\">module</span>.exports = <span class=\"hljs-built_in\">Object</span>.assign({}, base, {\n  <span class=\"hljs-comment\">// 生成后的运行环境在node</span>\n  target: <span class=\"hljs-string\">'node'</span>,\n  <span class=\"hljs-comment\">// 关闭map</span>\n  devtool: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-comment\">// 替换到server-entry.js</span>\n  entry: <span class=\"hljs-string\">'./src/server-entry.js'</span>,\n  <span class=\"hljs-comment\">// 设置输出文件名与模块导出为commonjs2</span>\n  output: <span class=\"hljs-built_in\">Object</span>.assign({}, base.output, {\n      <span class=\"hljs-attr\">filename</span>: <span class=\"hljs-string\">'server-bundle.js'</span>,\n      <span class=\"hljs-attr\">libraryTarget</span>: <span class=\"hljs-string\">'commonjs2'</span>\n  }),\n  <span class=\"hljs-comment\">// api设置到server的api上</span>\n  resolve: {\n      <span class=\"hljs-attr\">alias</span>: <span class=\"hljs-built_in\">Object</span>.assign({}, base.resolve.alias, {\n          <span class=\"hljs-string\">'create-api'</span>: <span class=\"hljs-string\">'./create-api-server.js'</span>\n      })\n  },\n  <span class=\"hljs-comment\">// 不打包运行时依赖，后面这个文件在node中运行</span>\n  externals: <span class=\"hljs-built_in\">Object</span>.keys(<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'../package.json'</span>).dependencies),\n  <span class=\"hljs-comment\">// 设置环境变量</span>\n  plugins: [\n      <span class=\"hljs-keyword\">new</span> webpack.DefinePlugin({\n          <span class=\"hljs-string\">'process.env.NODE_ENV'</span>: <span class=\"hljs-built_in\">JSON</span>.stringify(process.env.NODE_ENV || <span class=\"hljs-string\">'development'</span>),\n          <span class=\"hljs-string\">'process.env.VUE_ENV'</span>: <span class=\"hljs-string\">'\"server\"'</span>\n      })\n  ]\n})\n</code></pre>\n<h3><a class=\"anchor\" name=\"6. src/client-entry.js\" href=\"#6. src/client-entry.js\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. src/client-entry.js</h3><p>webpack_require: [&#39;src/app.js&#39;]</p>\n<pre class=\"code javascript\"><code class=\"javascript\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'es6-promise/auto'</span>\n<span class=\"hljs-keyword\">import</span> { app, store } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app'</span>\n<span class=\"hljs-comment\">// 第一次进入页面时获取ssr的state替换上</span>\n<span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">window</span>.__INSTAL_STATE__) {\n  store.replaceState(<span class=\"hljs-built_in\">window</span>.__INSTAL_STATE__)\n}\n<span class=\"hljs-comment\">// 把app直接与ssr的html同步</span>\napp.$mount(<span class=\"hljs-string\">'#app'</span>)\n<span class=\"hljs-comment\">// 生产环境优化使用sw缓存</span>\n<span class=\"hljs-keyword\">if</span> (process.env.NODE_ENV === <span class=\"hljs-string\">'production'</span> &amp;&amp; <span class=\"hljs-string\">'serviceWorker'</span> <span class=\"hljs-keyword\">in</span> navigator){\n  navigator.serviceWorker.register(<span class=\"hljs-string\">'/service-worker.js'</span>)\n}\n</code></pre>\n</blockquote>\n<h3><a class=\"anchor\" name=\"7. src/server-entry.js\" href=\"#7. src/server-entry.js\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. src/server-entry.js</h3><blockquote>\n<p>webpack-require: [&#39;src/app.js&#39;]</p>\n<pre class=\"code javascript\"><code class=\"javascript\"><span class=\"hljs-keyword\">import</span> { app, router, store } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app'</span>\n<span class=\"hljs-keyword\">const</span> isDev = process.env.NODE_ENV !== <span class=\"hljs-string\">'prodution'</span>\n<span class=\"hljs-comment\">// server.js的renderToStream方法会调用这里</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> context =&gt; {\n  <span class=\"hljs-keyword\">const</span> s = isDev &amp;&amp; <span class=\"hljs-built_in\">Date</span>.now()\n  <span class=\"hljs-comment\">// 使用前端路由切换到请求的url</span>\n  router.push(context.url)\n  <span class=\"hljs-comment\">// 并获取该路由的所有Component</span>\n  <span class=\"hljs-keyword\">const</span> matchedComponents = router.getMatchedComponents()\n  <span class=\"hljs-comment\">// 没有Component说明没有路由匹配</span>\n  <span class=\"hljs-keyword\">if</span> (!matchedComponents.length) {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Promise</span>.reject({ <span class=\"hljs-attr\">code</span>: <span class=\"hljs-string\">'404'</span> })\n  }\n  <span class=\"hljs-comment\">// 使用Promise.all把所有的Component有异步preFetch方法执行</span>\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Promise</span>.all(matchedComponents.map(<span class=\"hljs-function\"><span class=\"hljs-params\">component</span> =&gt;</span> {\n      <span class=\"hljs-keyword\">if</span> (component.preFetch){\n          <span class=\"hljs-keyword\">return</span> component.preFetch(store)\n      }\n  })).then(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n      isDev &amp;&amp; <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`data pre-fetch: <span class=\"hljs-subst\">${<span class=\"hljs-built_in\">Date</span>.now() - s}</span>ms`</span>)\n      <span class=\"hljs-comment\">// 把vuex的state设置到传入的context.initialState上</span>\n      context.initialState = store.state\n      <span class=\"hljs-comment\">// 返回已经设置好state, router的app</span>\n      <span class=\"hljs-keyword\">return</span> app\n  })\n}\n</code></pre>\n</blockquote>\n<h3><a class=\"anchor\" name=\"8. src/app.js\" href=\"#8. src/app.js\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. src/app.js</h3><blockquote>\n<p>webpack-require: [&#39;src/App.vue&#39;, &#39;src/store/index.js&#39;, &#39;src/router/index.js&#39;]</p>\n<pre class=\"code javascript\"><code class=\"javascript\"><span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-keyword\">new</span> Vue({\n  router,\n  store,\n  <span class=\"hljs-comment\">// 把App.vue的所有对象属性设置到新的根vue上</span>\n  ...App\n})\n<span class=\"hljs-comment\">// 导出app,router,store给ssr使用</span>\n<span class=\"hljs-keyword\">export</span> { app, router, store }\n</code></pre>\n</blockquote>\n<h3><a class=\"anchor\" name=\"9. src/store/index.js\" href=\"#9. src/store/index.js\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. src/store/index.js</h3><blockquote>\n<p>webpack-require: [&#39;src/store/api.js&#39;]</p>\n<p>没有什么有ssr有关的东西，只是api请求都在api.js</p>\n</blockquote>\n<h3><a class=\"anchor\" name=\"10. src/store/api.js\" href=\"#10. src/store/api.js\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10. src/store/api.js</h3><blockquote>\n<p>webpack-require: [&#39;src/store/create-api-(client|server).js&#39;]</p>\n<pre class=\"code javascript\"><code class=\"javascript\"><span class=\"hljs-comment\">// [L15-L29]</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">fetch</span> (<span class=\"hljs-params\">child</span>) </span>{\n  <span class=\"hljs-keyword\">const</span> cache = api.cachedItems\n  <span class=\"hljs-comment\">// 优化可不做</span>\n  <span class=\"hljs-keyword\">if</span> (cache &amp;&amp; cache.has(child)) {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Promise</span>.resolve(cache.get(child))\n  } <span class=\"hljs-keyword\">else</span> {\n      <span class=\"hljs-comment\">// 获取api数据并设置最后更新时间</span>\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {\n          Axios.get(api.url + child + <span class=\"hljs-string\">'.json'</span>).then(<span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\n              <span class=\"hljs-keyword\">const</span> val = res.data\n              <span class=\"hljs-keyword\">if</span> (val) val.__lastUpdate = <span class=\"hljs-built_in\">Date</span>.now()\n              cache &amp;&amp; cache.set(child, val)\n              resolve(val)\n          }).catch(reject)\n      })\n  }\n}\n<span class=\"hljs-comment\">// [L51-L75]</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">watchList</span> (<span class=\"hljs-params\">type, cb</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> first = <span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-keyword\">let</span> isOn = <span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-keyword\">let</span> timeoutId = <span class=\"hljs-literal\">null</span>\n  <span class=\"hljs-keyword\">const</span> handler = <span class=\"hljs-function\"><span class=\"hljs-params\">res</span> =&gt;</span> {\n      cb(res.data)\n  }\n  <span class=\"hljs-comment\">// 创建一个无限的定时循环来请求数据</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">watchTimeout</span>(<span class=\"hljs-params\"></span>) </span>{\n      <span class=\"hljs-keyword\">if</span> (first) {\n          first = <span class=\"hljs-literal\">false</span>\n      } <span class=\"hljs-keyword\">else</span> {\n          Axios.get(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${api.url}</span><span class=\"hljs-subst\">${type}</span>stories.json`</span>).then(handler)\n      }\n      <span class=\"hljs-keyword\">if</span> (isOn){\n          timeoutId = setTimeout(watchTimeout, <span class=\"hljs-number\">1000</span> * <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">15</span>)\n      }\n  }\n  watchTimeout()\n  <span class=\"hljs-comment\">// 返回一个结束无限定时循环的函数</span>\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n      isOn = <span class=\"hljs-literal\">false</span>\n      <span class=\"hljs-keyword\">if</span> (timeoutId){\n          clearTimeout(timeoutId)\n      }\n  }\n}\n</code></pre>\n</blockquote>\n<h3><a class=\"anchor\" name=\"11. src/views/createlistview.js\" href=\"#11. src/views/createlistview.js\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11. src/views/CreateListView.js</h3><blockquote>\n<p>webpack-require: [&#39;src/components/ItemList.vue&#39;]</p>\n<p>src/router/index.js没有什么有和ssr有关的直接来到这里</p>\n<pre class=\"code fsharp\"><code class=\"fsharp\"><span class=\"hljs-comment\">// 导出的方法通过参数来重新包装component,</span>\n<span class=\"hljs-comment\">// preFetch则是保证ssr时component的data里数据已经完成异步获取。</span>\n<span class=\"hljs-comment\">// 如果没有preFetch而是通过vue的生命周期来异步设置则data不会有ssr效果</span>\nexport <span class=\"hljs-keyword\">function</span> createListView (<span class=\"hljs-class\"><span class=\"hljs-keyword\">type</span>) {</span>\n  <span class=\"hljs-keyword\">return</span> {\n      name: `${<span class=\"hljs-class\"><span class=\"hljs-keyword\">type</span>}-<span class=\"hljs-title\">stories</span>-<span class=\"hljs-title\">view</span>`,</span>\n      preFetch (store) {\n          <span class=\"hljs-keyword\">return</span> store.dispatch('FETCH_LIST_DATA', { <span class=\"hljs-class\"><span class=\"hljs-keyword\">type</span> })</span>\n      },\n      render (h) {\n          <span class=\"hljs-keyword\">return</span> h(ItemList, { props: { <span class=\"hljs-class\"><span class=\"hljs-keyword\">type</span> } })</span>\n      }\n  }\n}\n</code></pre>\n</blockquote>\n<h3><a class=\"anchor\" name=\"12. src/components/itemlist.vue\" href=\"#12. src/components/itemlist.vue\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>12. src/components/ItemList.vue</h3><pre class=\"code javascript\"><code class=\"javascript\"><span class=\"hljs-comment\">// [L60-L30]</span>\n  <span class=\"hljs-comment\">// 在判断root已经挂载说明是路由跳转重新调用loadItems</span>\n  beforeMount () {\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.$root._isMounted) {\n          <span class=\"hljs-keyword\">this</span>.loadItems(<span class=\"hljs-keyword\">this</span>.page)\n      }\n<span class=\"hljs-comment\">// [L80-L94]</span>\n      <span class=\"hljs-comment\">// 触发vuex设置的动作来请求数据</span>\n      loadItems (to=<span class=\"hljs-keyword\">this</span>.page, <span class=\"hljs-keyword\">from</span>=<span class=\"hljs-number\">-1</span>) {\n          <span class=\"hljs-keyword\">this</span>.loading = <span class=\"hljs-literal\">true</span>\n          <span class=\"hljs-keyword\">this</span>.$store.dispatch(<span class=\"hljs-string\">'FETCH_LIST_DATA'</span>, {\n              <span class=\"hljs-attr\">type</span>: <span class=\"hljs-keyword\">this</span>.type\n          }).then(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n              <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.page &lt; <span class=\"hljs-number\">0</span> || <span class=\"hljs-keyword\">this</span>.page &gt; <span class=\"hljs-keyword\">this</span>.maxPage) {\n                  <span class=\"hljs-keyword\">this</span>.$router.replace(<span class=\"hljs-string\">`/<span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this</span>.type}</span>/1`</span>)\n                  <span class=\"hljs-keyword\">return</span>\n              }\n              <span class=\"hljs-keyword\">this</span>.transition = <span class=\"hljs-keyword\">from</span> === <span class=\"hljs-number\">-1</span> ? <span class=\"hljs-literal\">null</span> : to &gt; <span class=\"hljs-keyword\">from</span> ? <span class=\"hljs-string\">'slide-left'</span> : <span class=\"hljs-string\">'slide-right'</span>\n              <span class=\"hljs-keyword\">this</span>.displayedPage = to \n              <span class=\"hljs-keyword\">this</span>.displayedItems = <span class=\"hljs-keyword\">this</span>.$store.getters.activeItems\n              <span class=\"hljs-keyword\">this</span>.loading = <span class=\"hljs-literal\">false</span>\n          })\n      },\n</code></pre>\n<h2><a class=\"anchor\" name=\"五.文字流程说明\" href=\"#五.文字流程说明\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>五.文字流程说明</h2></li>\n<li class=\"list-item\">node server.js : 设置路由所有请求通过ssr生成器</li>\n<li class=\"list-item\">server.js -&gt; setup-dev-server.js : dev时生成index.html和server-bundle.js</li>\n<li class=\"list-item\">setup-dev-server.js -&gt; (server|client)-entry.js : 通过webpack对入口文件生成</li>\n<li class=\"list-item\">client-entry.js : 挂载ssr的vuex的state</li>\n<li class=\"list-item\">server-entry.js : 通过url来preFetch设置vuex的state</li>\n<li class=\"list-item\"><p>component: 需要有preFetch来获取异步数据</p>\n<h2><a class=\"anchor\" name=\"六.源码\" href=\"#六.源码\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>六.源码</h2><p><a href=\"https://github.com/zeromake/my-vue-hackernews/tree/ssr-demo\">源码这里</a></p>\n</li>\n</ul>\n"}